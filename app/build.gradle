apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.example.testcodeapplication"
        minSdkVersion 21
        targetSdkVersion 30     //Android 11
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

//    signingConfigs {
//        debug {
//            storeFile file("../ifly_pad.jks")
//            storePassword "iflytech06"
//            keyAlias "platform"
//            keyPassword "iflytech06"
//        }
//
//        release {
//            storeFile file("../ifly_pad.jks")
//            storePassword "iflytech06"
//            keyAlias "platform"
//            keyPassword "iflytech06"
//        }
//
//        lintOptions {
//            // if set to true (default), stops the build if errors are found.
//            //abortOnError false
//            // if true, only report errors.
//            ignoreWarnings true
//        }
//    }

    buildTypes {
        debug {
//            signingConfig signingConfigs.debug
            minifyEnabled false
        }

        release {
//            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
}

//Rejecting re-init on previously-failed class java.lang.Class<androidx.core.view.ViewCompat$2>:
//java.lang.NoClassDefFoundError: Failed resolution of: Landroid/view/View$OnUnhandledKeyEventListener;
//Android Studio 최신 개발툴 버전이 이루어지면서 androidx 형태로 버전업이 이루어졌는데, 이에 따라서
//기존의 버전상에 있는 AppCompat 형태와 호환상 충돌이 나타나는 경우에 나오는 에러 안보이게 처리
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "androidx.appcompat") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "1.+"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.3.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'   // https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava3:rxjava:3.0.0'      // https://github.com/ReactiveX/RxJava/releases
    implementation 'io.reactivex.rxjava3:rxkotlin:3.0.0'    // https://github.com/ReactiveX/RxKotlin/releases

    implementation 'com.orhanobut:logger:2.2.0'

    implementation 'androidx.activity:activity-ktx:1.2.0-rc01'
    implementation 'androidx.fragment:fragment-ktx:1.3.0-rc01'

    /**
     * https://developer.android.com/jetpack/androidx/releases/lifecycle?hl=ko
     */
    def lifecycle_version = "2.2.0"
    def arch_version = "2.1.0"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    //kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    //implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    implementation "com.google.android.material:material:1.2.1"
    implementation 'com.squareup.okhttp3:okhttp:3.14.6'

}